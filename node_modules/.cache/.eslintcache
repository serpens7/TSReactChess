[{"/workspaces/chessWithCheck/src/index.tsx":"1","/workspaces/chessWithCheck/src/App.tsx":"2","/workspaces/chessWithCheck/src/models/Colors.ts":"3","/workspaces/chessWithCheck/src/models/Player.ts":"4","/workspaces/chessWithCheck/src/models/Board.ts":"5","/workspaces/chessWithCheck/src/components/LostFigures.tsx":"6","/workspaces/chessWithCheck/src/components/BoardComponent.tsx":"7","/workspaces/chessWithCheck/src/models/Cell.ts":"8","/workspaces/chessWithCheck/src/models/figures/Bishop.ts":"9","/workspaces/chessWithCheck/src/models/figures/King.ts":"10","/workspaces/chessWithCheck/src/models/figures/Queen.ts":"11","/workspaces/chessWithCheck/src/models/figures/Pawn.ts":"12","/workspaces/chessWithCheck/src/models/figures/Rook.ts":"13","/workspaces/chessWithCheck/src/models/figures/Knight.ts":"14","/workspaces/chessWithCheck/src/components/CellComponent.tsx":"15","/workspaces/chessWithCheck/src/models/figures/Figure.ts":"16","/workspaces/chessWithCheck/src/components/endOfTheGame/EndOfTheGame.tsx":"17","/workspaces/chessWithCheck/src/models/checkMateChecker.ts":"18","/workspaces/chessWithCheck/src/components/Timer.tsx":"19"},{"size":166,"mtime":1698127186137,"results":"20","hashOfConfig":"21"},{"size":2005,"mtime":1698915317545,"results":"22","hashOfConfig":"21"},{"size":61,"mtime":1698127186137,"results":"23","hashOfConfig":"21"},{"size":175,"mtime":1698127186137,"results":"24","hashOfConfig":"21"},{"size":6207,"mtime":1698854138267,"results":"25","hashOfConfig":"21"},{"size":532,"mtime":1698127186137,"results":"26","hashOfConfig":"21"},{"size":2385,"mtime":1698915349533,"results":"27","hashOfConfig":"21"},{"size":2944,"mtime":1698398102101,"results":"28","hashOfConfig":"21"},{"size":652,"mtime":1698232499857,"results":"29","hashOfConfig":"21"},{"size":1508,"mtime":1698848426026,"results":"30","hashOfConfig":"21"},{"size":761,"mtime":1698231737812,"results":"31","hashOfConfig":"21"},{"size":2761,"mtime":1698509608375,"results":"32","hashOfConfig":"21"},{"size":883,"mtime":1698231215172,"results":"33","hashOfConfig":"21"},{"size":767,"mtime":1698232473958,"results":"34","hashOfConfig":"21"},{"size":682,"mtime":1698127186137,"results":"35","hashOfConfig":"21"},{"size":1025,"mtime":1698504266130,"results":"36","hashOfConfig":"21"},{"size":1853,"mtime":1698850457462,"results":"37","hashOfConfig":"21"},{"size":898,"mtime":1698848458053,"results":"38","hashOfConfig":"21"},{"size":2935,"mtime":1698915182980,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ocn9ut",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/workspaces/chessWithCheck/src/index.tsx",[],[],"/workspaces/chessWithCheck/src/App.tsx",["101","102","103","104","105"],[],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Board } from \"./models/Board\";\nimport BoardComponent from \"./components/BoardComponent\";\nimport LostFigures from \"./components/LostFigures\";\nimport EndOfTheGameComponent from \"./components/Timer\";\nimport \"./App.css\";\nimport { Player } from \"./models/Player\";\nimport { Colors } from \"./models/Colors\";\nimport isCheckMate from \"./models/checkMateChecker\";\nimport { Cell } from \"./models/Cell\";\n\nconst App = () => {\n  const [board, setBoard] = useState(new Board());\n  const [whitePlayer, setWhitePlayer] = useState(new Player(Colors.WHITE));\n  const [blackPlayer, setBlackPlayer] = useState(new Player(Colors.BLACK));\n  const [currentPlayer, setCurrentPlayer] = useState<Player | null>(null);\n  const [selectedCell, setSelectedCell] = useState<Cell | null>(null);\n\n  useEffect(() => {\n    restart();\n  }, []);\n\n  function restart() {\n    const newBoard = new Board();\n    newBoard.initCells();\n    newBoard.addFigures();\n    setBoard(newBoard);\n    console.log(newBoard);\n    setCurrentPlayer(whitePlayer);\n  }\n\n  function swapPlayer(): void {\n    if (currentPlayer?.color === Colors.WHITE) {\n      setCurrentPlayer(blackPlayer);\n    } else {\n      setCurrentPlayer(whitePlayer);\n    }\n  }\n\n  return (\n    <div className=\"app\">\n      <EndOfTheGameComponent\n        selectedCell={selectedCell}\n        setSelectedCell={setSelectedCell}\n        board={board}\n        currentPlayer={currentPlayer}\n        restart={restart}\n        swapPlayer={swapPlayer}\n      />\n      <BoardComponent\n        selectedCell={selectedCell}\n        setSelectedCell={setSelectedCell}\n        board={board}\n        setBoard={setBoard}\n        currentPlayer={currentPlayer}\n        swapPlayer={swapPlayer}\n      />\n      <div>\n        <LostFigures title=\"Черные фигуры:\" figures={board.lostBlackFigures} />\n        <LostFigures title=\"Белые фигуры:\" figures={board.lostWhiteFigures} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n",["106"],"/workspaces/chessWithCheck/src/models/Colors.ts",[],[],"/workspaces/chessWithCheck/src/models/Player.ts",[],[],"/workspaces/chessWithCheck/src/models/Board.ts",["107"],[],"/workspaces/chessWithCheck/src/components/LostFigures.tsx",["108"],[],"/workspaces/chessWithCheck/src/components/BoardComponent.tsx",["109","110","111","112","113"],[],"import React, { FC, useContext, useEffect, useMemo, useState } from \"react\";\nimport { Board } from \"../models/Board\";\nimport CellComponent from \"./CellComponent\";\nimport { Cell } from \"../models/Cell\";\nimport { Player } from \"../models/Player\";\nimport { Colors } from \"../models/Colors\";\nimport checkMateChecker from \"../models/checkMateChecker\";\n\ninterface BoardProps {\n  board: Board;\n  setBoard: (board: Board) => void;\n  currentPlayer: Player | null;\n  swapPlayer: () => void;\n  setSelectedCell: (cell: Cell | null) => void;\n  selectedCell: Cell | null;\n}\n\nconst BoardComponent: FC<BoardProps> = ({\n  board,\n  setBoard,\n  currentPlayer,\n  swapPlayer,\n  setSelectedCell,\n  selectedCell,\n}) => {\n  function click(cell: Cell) {\n    if (\n      selectedCell &&\n      selectedCell !== cell &&\n      selectedCell.figure?.canMove(cell)\n    ) {\n      if (!board.isAvailableMove(selectedCell.figure, selectedCell, cell))\n        return;\n      selectedCell?.moveFigure(cell);\n      swapPlayer();\n      setSelectedCell(null);\n      updateBoard();\n    } else {\n      if (cell.figure?.color === currentPlayer?.color) setSelectedCell(cell);\n    }\n    if (selectedCell) {\n      setSelectedCell(null);\n    }\n    if (selectedCell === null && !cell.figure) {\n      setSelectedCell(null);\n    }\n  }\n\n  useEffect(() => {\n    highLightCells();\n  }, [selectedCell]);\n\n  function highLightCells() {\n    board.highLightCells(selectedCell);\n    updateBoard();\n  }\n\n  function updateBoard() {\n    const newBoard = board.getCopyBoard();\n    setBoard(newBoard);\n    if (newBoard.checkCheckMate()) {\n      newBoard.checkMate = true;\n      console.log(\"мааат?!\");\n    }\n    //форсапдейт компонента\n  }\n\n  return (\n    <div>\n      <div className=\"board\">\n        {board.cells.map((row, index) => (\n          <React.Fragment key={index}>\n            {row.map((cell) => (\n              <CellComponent\n                click={click}\n                cell={cell}\n                key={cell.id}\n                selected={\n                  cell.x === selectedCell?.x && cell.y === selectedCell?.y\n                }\n              />\n            ))}\n          </React.Fragment>\n        ))}\n      </div>\n      <h2 className=\"right-side\">\n        Ход {currentPlayer?.color === Colors.WHITE ? \"белых\" : \"черных\"} фигур\n      </h2>\n    </div>\n  );\n};\n\nexport default BoardComponent;\n","/workspaces/chessWithCheck/src/models/Cell.ts",["114","115"],[],"/workspaces/chessWithCheck/src/models/figures/Bishop.ts",[],[],["116"],"/workspaces/chessWithCheck/src/models/figures/King.ts",[],[],"/workspaces/chessWithCheck/src/models/figures/Queen.ts",[],[],"/workspaces/chessWithCheck/src/models/figures/Pawn.ts",["117"],[],"/workspaces/chessWithCheck/src/models/figures/Rook.ts",[],[],"/workspaces/chessWithCheck/src/models/figures/Knight.ts",[],[],"/workspaces/chessWithCheck/src/components/CellComponent.tsx",[],[],"/workspaces/chessWithCheck/src/models/figures/Figure.ts",[],[],"/workspaces/chessWithCheck/src/components/endOfTheGame/EndOfTheGame.tsx",[],[],"/workspaces/chessWithCheck/src/models/checkMateChecker.ts",["118","119","120","121"],[],"/workspaces/chessWithCheck/src/components/Timer.tsx",["122","123","124"],[],{"ruleId":"125","severity":1,"message":"126","line":1,"column":38,"nodeType":"127","messageId":"128","endLine":1,"endColumn":44},{"ruleId":"125","severity":1,"message":"129","line":9,"column":8,"nodeType":"127","messageId":"128","endLine":9,"endColumn":19},{"ruleId":"125","severity":1,"message":"130","line":14,"column":23,"nodeType":"127","messageId":"128","endLine":14,"endColumn":37},{"ruleId":"125","severity":1,"message":"131","line":15,"column":23,"nodeType":"127","messageId":"128","endLine":15,"endColumn":37},{"ruleId":"132","severity":1,"message":"133","line":21,"column":6,"nodeType":"134","endLine":21,"endColumn":8,"suggestions":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"125","severity":1,"message":"138","line":10,"column":8,"nodeType":"127","messageId":"128","endLine":10,"endColumn":24},{"ruleId":"139","severity":1,"message":"140","line":16,"column":27,"nodeType":"141","endLine":16,"endColumn":75},{"ruleId":"125","severity":1,"message":"142","line":1,"column":21,"nodeType":"127","messageId":"128","endLine":1,"endColumn":31},{"ruleId":"125","severity":1,"message":"143","line":1,"column":44,"nodeType":"127","messageId":"128","endLine":1,"endColumn":51},{"ruleId":"125","severity":1,"message":"144","line":1,"column":53,"nodeType":"127","messageId":"128","endLine":1,"endColumn":61},{"ruleId":"125","severity":1,"message":"138","line":7,"column":8,"nodeType":"127","messageId":"128","endLine":7,"endColumn":24},{"ruleId":"132","severity":1,"message":"145","line":51,"column":6,"nodeType":"134","endLine":51,"endColumn":20,"suggestions":"146"},{"ruleId":"125","severity":1,"message":"147","line":3,"column":10,"nodeType":"127","messageId":"128","endLine":3,"endColumn":14},{"ruleId":"125","severity":1,"message":"148","line":6,"column":10,"nodeType":"127","messageId":"128","endLine":6,"endColumn":16},{"ruleId":"136","replacedBy":"149"},{"ruleId":"125","severity":1,"message":"150","line":7,"column":8,"nodeType":"127","messageId":"128","endLine":7,"endColumn":22},{"ruleId":"125","severity":1,"message":"151","line":1,"column":10,"nodeType":"127","messageId":"128","endLine":1,"endColumn":14},{"ruleId":"125","severity":1,"message":"152","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":16},{"ruleId":"125","severity":1,"message":"148","line":4,"column":10,"nodeType":"127","messageId":"128","endLine":4,"endColumn":16},{"ruleId":"125","severity":1,"message":"153","line":5,"column":10,"nodeType":"127","messageId":"128","endLine":5,"endColumn":16},{"ruleId":"132","severity":1,"message":"154","line":34,"column":6,"nodeType":"134","endLine":34,"endColumn":21,"suggestions":"155"},{"ruleId":"132","severity":1,"message":"156","line":38,"column":6,"nodeType":"134","endLine":38,"endColumn":28,"suggestions":"157"},{"ruleId":"132","severity":1,"message":"156","line":42,"column":6,"nodeType":"134","endLine":42,"endColumn":13,"suggestions":"158"},"@typescript-eslint/no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'isCheckMate' is defined but never used.","'setWhitePlayer' is assigned a value but never used.","'setBlackPlayer' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'restart'. Either include it or remove the dependency array.","ArrayExpression",["159"],"no-new-object",["160"],"'checkMateChecker' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useContext' is defined but never used.","'useMemo' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'highLightCells'. Either include it or remove the dependency array.",["161"],"'Pawn' is defined but never used.","'Player' is defined but never used.",["160"],"'BoardComponent' is defined but never used.","'Cell' is defined but never used.","'Colors' is defined but never used.","'Figure' is defined but never used.","React Hook useEffect has missing dependencies: 'blackTime', 'startTimer', and 'whiteTime'. Either include them or remove the dependency array.",["162"],"React Hook useEffect has a missing dependency: 'createEndGameForm'. Either include it or remove the dependency array.",["163"],["164"],{"desc":"165","fix":"166"},"no-object-constructor",{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},"Update the dependencies array to be: [restart]",{"range":"175","text":"176"},"Update the dependencies array to be: [highLightCells, selectedCell]",{"range":"177","text":"178"},"Update the dependencies array to be: [blackTime, currentPlayer, startTimer, whiteTime]",{"range":"179","text":"180"},"Update the dependencies array to be: [whiteTime, blackTime, createEndGameForm]",{"range":"181","text":"182"},"Update the dependencies array to be: [board, createEndGameForm]",{"range":"183","text":"184"},[872,874],"[restart]",[1331,1345],"[highLightCells, selectedCell]",[992,1007],"[blackTime, currentPlayer, startTimer, whiteTime]",[1061,1083],"[whiteTime, blackTime, createEndGameForm]",[1137,1144],"[board, createEndGameForm]"]
{"ast":null,"code":"var _jsxFileName = \"/workspaces/chessWithCheck/src/components/endOfTheGame/EndOfTheGame.tsx\";\nimport React from \"react\";\nimport cl from \"./endOfTheGame.module.css\";\nimport { Colors } from \"../../models/Colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EndOfTheGame = ({\n  restart,\n  visible,\n  setVisible,\n  currentPlayer\n}) => {\n  const rootClasses = [cl.myModal];\n  let winner;\n  whoIsAWinner(currentPlayer);\n  if (visible) {\n    rootClasses.push(cl.active);\n  }\n  function whoIsAWinner(currentPlayer) {\n    if ((currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.color) === Colors.WHITE) {\n      winner = \"Белый игрок\";\n    } else {\n      winner = \"Черный игрок\";\n    }\n  }\n  const newGameStart = () => {\n    restart();\n    setVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: rootClasses.join(\" \"),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cl.myModalContent,\n      onClick: e => {\n        e.stopPropagation();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [winner, \" \\u043F\\u043E\\u0431\\u0435\\u0434\\u0438\\u043B! \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"c-button\",\n        onClick: newGameStart,\n        children: [\" \", \"\\u041D\\u043E\\u0432\\u0430\\u044F \\u0438\\u0433\\u0440\\u0430\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c = EndOfTheGame;\nexport default EndOfTheGame;\nvar _c;\n$RefreshReg$(_c, \"EndOfTheGame\");","map":{"version":3,"names":["React","cl","Colors","jsxDEV","_jsxDEV","EndOfTheGame","restart","visible","setVisible","currentPlayer","rootClasses","myModal","winner","whoIsAWinner","push","active","color","WHITE","newGameStart","className","join","children","myModalContent","onClick","e","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspaces/chessWithCheck/src/components/endOfTheGame/EndOfTheGame.tsx"],"sourcesContent":["import React, { FC } from \"react\";\r\nimport cl from \"./endOfTheGame.module.css\";\r\nimport { Colors } from \"../../models/Colors\";\r\nimport { Player } from \"../../models/Player\";\r\n\r\ninterface endOfTheGameProps {\r\n  visible: boolean;\r\n  setVisible: any;\r\n  currentPlayer: Player | null;\r\n  restart: () => void;\r\n}\r\n\r\nconst EndOfTheGame: FC<endOfTheGameProps> = ({\r\n  restart,\r\n  visible,\r\n  setVisible,\r\n  currentPlayer,\r\n}) => {\r\n  const rootClasses = [cl.myModal];\r\n  let winner;\r\n  whoIsAWinner(currentPlayer);\r\n\r\n  if (visible) {\r\n    rootClasses.push(cl.active);\r\n  }\r\n\r\n  function whoIsAWinner(currentPlayer: Player | null) {\r\n    if (currentPlayer?.color === Colors.WHITE) {\r\n      winner = \"Белый игрок\";\r\n    } else {\r\n      winner = \"Черный игрок\";\r\n    }\r\n  }\r\n\r\n  const newGameStart = () => {\r\n    restart();\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div className={rootClasses.join(\" \")}>\r\n      <div\r\n        className={cl.myModalContent}\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n        }}\r\n      >\r\n        <h3>{winner} победил! </h3>\r\n        <button className=\"c-button\" onClick={newGameStart}>\r\n          {\" \"}\r\n          Новая игра\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EndOfTheGame;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAc,OAAO;AACjC,OAAOC,EAAE,MAAM,2BAA2B;AAC1C,SAASC,MAAM,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU7C,MAAMC,YAAmC,GAAGA,CAAC;EAC3CC,OAAO;EACPC,OAAO;EACPC,UAAU;EACVC;AACF,CAAC,KAAK;EACJ,MAAMC,WAAW,GAAG,CAACT,EAAE,CAACU,OAAO,CAAC;EAChC,IAAIC,MAAM;EACVC,YAAY,CAACJ,aAAa,CAAC;EAE3B,IAAIF,OAAO,EAAE;IACXG,WAAW,CAACI,IAAI,CAACb,EAAE,CAACc,MAAM,CAAC;EAC7B;EAEA,SAASF,YAAYA,CAACJ,aAA4B,EAAE;IAClD,IAAI,CAAAA,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEO,KAAK,MAAKd,MAAM,CAACe,KAAK,EAAE;MACzCL,MAAM,GAAG,aAAa;IACxB,CAAC,MAAM;MACLA,MAAM,GAAG,cAAc;IACzB;EACF;EAEA,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACzBZ,OAAO,CAAC,CAAC;IACTE,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,oBACEJ,OAAA;IAAKe,SAAS,EAAET,WAAW,CAACU,IAAI,CAAC,GAAG,CAAE;IAAAC,QAAA,eACpCjB,OAAA;MACEe,SAAS,EAAElB,EAAE,CAACqB,cAAe;MAC7BC,OAAO,EAAGC,CAAC,IAAK;QACdA,CAAC,CAACC,eAAe,CAAC,CAAC;MACrB,CAAE;MAAAJ,QAAA,gBAEFjB,OAAA;QAAAiB,QAAA,GAAKT,MAAM,EAAC,+CAAU;MAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BzB,OAAA;QAAQe,SAAS,EAAC,UAAU;QAACI,OAAO,EAAEL,YAAa;QAAAG,QAAA,GAChD,GAAG,EAAC,yDAEP;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACC,EAAA,GA3CIzB,YAAmC;AA6CzC,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
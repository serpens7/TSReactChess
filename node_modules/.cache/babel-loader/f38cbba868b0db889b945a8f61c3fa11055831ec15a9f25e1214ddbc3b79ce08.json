{"ast":null,"code":"var _jsxFileName = \"/workspaces/chessWithCheck/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Board } from \"./models/Board\";\nimport BoardComponent from \"./components/BoardComponent\";\nimport LostFigures from \"./components/LostFigures\";\nimport Timer from \"./components/Timer\";\nimport \"./App.css\";\nimport { Player } from \"./models/Player\";\nimport { Colors } from \"./models/Colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [board, setBoard] = useState(new Board());\n  const [whitePlayer, setWhitePlayer] = useState(new Player(Colors.WHITE));\n  const [blackPlayer, setBlackPlayer] = useState(new Player(Colors.BLACK));\n  const [currentPlayer, setCurrentPlayer] = useState(null);\n  const [previousPlayer, setPreviousPlayer] = useState(null);\n  const savedPreviousPlayer = useRef(previousPlayer);\n  useEffect(() => {\n    restart();\n  }, []);\n  function restart() {\n    const newBoard = new Board();\n    newBoard.initCells();\n    newBoard.addFigures();\n    setBoard(newBoard);\n    setCurrentPlayer(whitePlayer);\n  }\n  function swapPlayer() {\n    if ((currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.color) === Colors.WHITE) {\n      setPreviousPlayer(whitePlayer);\n      setCurrentPlayer(blackPlayer);\n    } else {\n      setPreviousPlayer(blackPlayer);\n      setCurrentPlayer(whitePlayer);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Timer, {\n      currentPlayer: currentPlayer,\n      restart: restart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BoardComponent, {\n      board: board,\n      setBoard: setBoard,\n      currentPlayer: currentPlayer,\n      swapPlayer: swapPlayer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(LostFigures, {\n        title: \"\\u0427\\u0435\\u0440\\u043D\\u044B\\u0435 \\u0444\\u0438\\u0433\\u0443\\u0440\\u044B:\",\n        figures: board.lostBlackFigures\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LostFigures, {\n        title: \"\\u0411\\u0435\\u043B\\u044B\\u0435 \\u0444\\u0438\\u0433\\u0443\\u0440\\u044B:\",\n        figures: board.lostWhiteFigures\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"m6VVTx9qYA40xpo9ZnMuf8+SpL8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Board","BoardComponent","LostFigures","Timer","Player","Colors","jsxDEV","_jsxDEV","App","_s","board","setBoard","whitePlayer","setWhitePlayer","WHITE","blackPlayer","setBlackPlayer","BLACK","currentPlayer","setCurrentPlayer","previousPlayer","setPreviousPlayer","savedPreviousPlayer","restart","newBoard","initCells","addFigures","swapPlayer","color","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","figures","lostBlackFigures","lostWhiteFigures","_c","$RefreshReg$"],"sources":["/workspaces/chessWithCheck/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { Board } from \"./models/Board\";\nimport BoardComponent from \"./components/BoardComponent\";\nimport LostFigures from \"./components/LostFigures\";\nimport Timer from \"./components/Timer\";\nimport \"./App.css\";\nimport { Player } from \"./models/Player\";\nimport { Colors } from \"./models/Colors\";\n\nconst App = () => {\n  const [board, setBoard] = useState(new Board());\n  const [whitePlayer, setWhitePlayer] = useState(new Player(Colors.WHITE));\n  const [blackPlayer, setBlackPlayer] = useState(new Player(Colors.BLACK));\n  const [currentPlayer, setCurrentPlayer] = useState<Player | null>(null);\n  const [previousPlayer, setPreviousPlayer] = useState<Player | null>(null);\n  const savedPreviousPlayer = useRef(previousPlayer);\n\n  useEffect(() => {\n    restart();\n  }, []);\n\n  function restart() {\n    const newBoard = new Board();\n    newBoard.initCells();\n    newBoard.addFigures();\n    setBoard(newBoard);\n    setCurrentPlayer(whitePlayer);\n  }\n\n  function swapPlayer() {\n    if (currentPlayer?.color === Colors.WHITE) {\n      setPreviousPlayer(whitePlayer);\n      setCurrentPlayer(blackPlayer);\n    } else {\n      setPreviousPlayer(blackPlayer);\n      setCurrentPlayer(whitePlayer);\n    }\n  }\n\n  return (\n    <div className=\"app\">\n      <Timer currentPlayer={currentPlayer} restart={restart} />\n      <BoardComponent\n        board={board}\n        setBoard={setBoard}\n        currentPlayer={currentPlayer}\n        swapPlayer={swapPlayer}\n      />\n      <div>\n        <LostFigures title=\"Черные фигуры:\" figures={board.lostBlackFigures} />\n        <LostFigures title=\"Белые фигуры:\" figures={board.lostWhiteFigures} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}